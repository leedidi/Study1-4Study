SELECT USER
FROM DUAL;
--==>> HR

--■■■ 팀별 실습 과제 ■■■--

-- HR 샘플 스키마 ERD 를 이용한 테이블 재구성~!!!

-- 팀별로... HR 스키마에 있는 기본 테이블 (7개)
-- COUNTRIES / DEPARTMENTS / EMPLOYEES / JOBS / JOB_HISTORY / LOCATIONS / REGIONS
-- 을 똑~~~같이 새로 구성한다.

-- 단, 생성하는 테이블의 이름은 『테이블명+팀번호』
-- ex) 1팀의 경우...
-- COUNTRIES01 / DEPARTMENTS01 / EMPLOYEES01 / JOBS01 / JOB_HISTORY01 / LOCATIONS01 / REGIONS01
-- ....
-- 과 같이 구성한다.

-- 1. 기존 테이블의 정보 수집
-- 2. 테이블 생성(컬럼 이름, 자료형, DEFAULT 표현식, NOT NULL 등 ....)
--    제약조건 설정(PK, UK, FK, CK, ... NN)
-- 3. 작성 후 데이터 입력
-- 4. 제출 항목
--    20210909_02_hr_팀별실습과제_3조.sql
--    후기_0조.txt
--    → 오라클 00팀 과제.zip
--@   팀별로 두개 제공... 후기에는 모든 팀원들의 후기가 들어 있어야 함
--@ 어떤 마음으로 임했고, 어떤 문제점 있고, 어떤 방법으로 해결했고, 어떤 걸 배웠는지....
--@ 이렇게 좀 길게 후기 쓰기!

--@ 테이블 구성이 쉽지 않음... 이거 파이널 프로젝트 때에는 최소 70개! 그떄 순서 잘 정해서 하기!

SELECT *
FROM EMPLOYEES;

==



SELECT  *
FROM TAB;


SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME IN ('COUNTRIES', 'DEPARTMENTS', 'EMPLOYEES', 'JOBS', 'JOB_HISTORY', 'LOCATIONS', 'REGIONS');

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME IN ('JOB_HISTORY');

SELECT *
FROM VIEW_CONSTCHECK
WHERE TABLE_NAME IN ('DEPARTMENTS');


DESC COUNTRIES;
DESC DEPARTMENTS;
DESC EMPLOYEES;
DESC JOBS;
DESC JOB_HISTORY;
DESC LOCATIONS;
DESC REGIONS;


-- MODIFY 대신 ADD로 해서 따옴표 추가!!

-- JOB_HISTORY


이름, 널, 유형, 



컬럼명       널       데이터타입  제약이름      테이블명  KEY  컬럼이름    널 유무
REGION_ID   NOT NULL NUMBER      REGION_ID_NN   REGIONS	    C	REGION_ID	"REGION_ID" IS NOT NULL	
REGION_NAME          VARCHAR2(25)REG_ID_PK      REGIONS	    P	REGION_ID



--- JOB_HISTORY
컬럼명          널      데이터타입   제약이름               테이블명          KEY      컬럼이름        체크 조건
------------- -------- ------------  ---------             ----------      --------   ----------      -----------
EMPLOYEE_ID   NOT NULL NUMBER(6)    JHIST_EMP_FK            JOB_HISTORY      R          EMPLOYEE_ID      (null)
EMPLOYEE_ID   NOT NULL NUMBER(6)    JHIST_EMPLOYEE_NN       JOB_HISTORY      C          EMPLOYEE_ID      (null)
EMPLOYEE_ID   NOT NULL NUMBER(6)    JHIST_EMP_ID_ST_DATE_PK JOB_HISTORY      P         EMPLOYEE_ID       "EMPLOYEE_ID" IS NOT NULL

START_DATE    NOT NULL DATE         JHIST_EMP_ID_ST_DATE_PK JOB_HISTORY      P         START_DATE        (null)
START_DATE    NOT NULL DATE         JHIST_START_DATE_NN     JOB_HISTORY      C         START_DATE         "START_DATE" IS NOT NULL
START_DATE    NOT NULL DATE         JHIST_DATE_INTERVAL     JOB_HISTORY      C         START_DATE        end_date > start_date

END_DATE      NOT NULL DATE         JHIST_END_DATE_NN       JOB_HISTORY      C          END_DATE         "END_DATE" IS NOT NULL
END_DATE      NOT NULL DATE         JHIST_DATE_INTERVAL     JOB_HISTORY      C          END_DATE          end_date > start_date

JOB_ID        NOT NULL VARCHAR2(10) JHIST_JOB_NN            JOB_HISTORY      C          JOB_ID            "JOB_ID" IS NOT NULL
JOB_ID        NOT NULL VARCHAR2(10) JHIST_JOB_FK            JOB_HISTORY      R          JOB_ID             (null)

DEPARTMENT_ID          NUMBER(4)   JHIST_DEPT_FK            JOB_HISTORY      R       DEPARTMENT_ID       (null)


SELECT *
FROM JOB_HISTORY;


-- JOB_ID
-- 테이블 생성
CREATE TABLE TBL_TEST1
( COL1 NUMBER(5)        PRIMARY KEY
, COL2 VARCHAR2(30)
);


--------------------------------------------------------------------------------
--8/10까지 과제


-- 1. 각자 기존 테이블 정보 수집하고
-- 2. 테이블 생성 구문 작성
-- 3. 각 테이블별로 INSERT 구문 작성

--일단 생성도, 실행도 하지는 말고! 작성만 하기 데이터 INSERT도..!
-- COUNTR_REG_FK -> COUNTR03_REG_FK
-- TEST13_COL1_XXXX --> TEST1303_COL1_XXXX 식으로 변경
-- C는 체크!
-- CHECK에는 MODIFY 대신 ADD로 해서 따옴표(EX> "END_DATE") 추가!!
-- 부모 테이블.. JOBS REGIONS?

--JOB_HISTORY

-- 1. 각자 기존 테이블 정보 수집
	6. JOB_HISTORY 테이블
	컬럼명          널          데이터타입       제약이름                  KEY        컬럼이름            체크 조건
	EMPLOYEE_ID   NOT NULL   NUMBER(6)      JHIST_EMP_FK                    R          EMPLOYEE_ID      
	EMPLOYEE_ID   NOT NULL   NUMBER(6)      JHIST_EMPLOYEE_NN               C         EMPLOYEE_ID      "EMPLOYEE_ID" IS NOT NULL
	EMPLOYEE_ID   NOT NULL   NUMBER(6)      JHIST_EMP_ID_ST_DATE_PK         P         EMPLOYEE_ID       
	START_DATE    NOT NULL   DATE            JHIST_EMP_ID_ST_DATE_PK        P         START_DATE       
	START_DATE    NOT NULL   DATE            JHIST_START_DATE_NN            C         START_DATE         "START_DATE" IS NOT NULL
	START_DATE    NOT NULL   DATE            JHIST_DATE_INTERVAL            C         START_DATE        end_date > start_date
	END_DATE      NOT NULL   DATE            JHIST_END_DATE_NN              C          END_DATE         "END_DATE" IS NOT NULL
	END_DATE      NOT NULL   DATE            JHIST_DATE_INTERVAL            C          END_DATE          end_date > start_date
	JOB_ID        NOT NULL   VARCHAR2(10)   JHIST_JOB_NN                    C          JOB_ID             "JOB_ID" IS NOT NULL
	JOB_ID        NOT NULL   VARCHAR2(10)   JHIST_JOB_FK                    R           JOB_ID             
	DEPARTMENT_ID            NUMBER(4)      JHIST_DEPT_FK                   R          DEPARTMENT_ID       
    
-- 2. 테이블 생성 구문 작성

--> 테이블 생성구문 안에서 작성하려면... 이렇게!
CREATE TABLE JOB_HISTORY03 
(...
, CONSTRAINT JHIST03_EMP_ID_ST_DATE_PK PRIMARY KEY(EMPLOYEE_ID, START_DATE));

--1) PRIMARY KEY 삽입 구문 작성 예제 (P.K)
 ALTER TABLE 해당테이블명
 ADD CONSTRAINT TBL뺀 해당테이블명_해당컬럼명_PK PRIMARY KEY(해당컬럼명);
-----------------------------------------------------------------------

ALTER TABLE TBL_TEST4
ADD CONSTRAINT TSET4_COL1_PK PRIMARY KEY(COL1);

ALTER TABLE JOB_HISTORY
ADD CONSTRAINT JHIST_EMP_ID_ST_DATE_PK PRIMARY KEY(EMPLOYEE_ID);

--2) FORIGN KEY 삽입 구문 작성 예제 (F.K)
 ALTER TABLE 참고받는테이블명
 ADD CONSTRAINT TBL뺀 참고받는테이블명_해당컬럼명_FK FOREIGN KEY(해당컬럼명)
                REFERENCES 참고할테이블명전체(해당컬럼명);
-------------------------------------------------------------------------------

ALTER TABLE TBL_EMP3
ADD ( CONSTRAINT EMP3_SID_ PRIMARY KEY(SID)
    , CONSTRAINT EMP3_JIKWI_ID_FK FOREIGN KEY(JIKWI_ID)
                 REFERENCES TBL_JOBS(JIKWI_ID) );
--3) CHECK KEY 삽입 구문 작성 예제 
 ALTER TABLE 해당테이블명
 ADD CONSTRAINT TBL뺀해당테이블명_해당컬럼명_CK CHECK(조건);
--------------------------------------------------------------------------------

ALTER TABLE TBL_TEST10
ADD ( CONSTRAINT TEST10_COL1_PK PRIMARY KEY(COL1)
    , CONSTRAINT TEST10_COL3_CK CHECK(COL3 BETWEEN 0 AND 100));

--4) NOT NULL 구문 (ADD 사용) (NOT NULL 구문도 C로 들어감..!)
 ALTER TABLE 해당테이블명
 ADD CONSTRAINT TBL뺀해당테이블명_해당컬럼명_NN CHECK("해당컬럼명" IS NOT NULL);
--------------------------------------------------------------------------------
ALTER TABLE TBL_TEST14
ADD CONSTRAINT TEST14_COL2_NN CHECK("COL2" IS NOT NULL);
--------------------------------------------------------------------------------
--*


-- 테이블 생성
CREATE TABLE JOB_HISTORY
( EMPLOYEE_ID   NUMBER(6)    
, START_DATE    DATE
, END_DATE      DATE
, JOB_ID        VARCHAR2(10)
, DEPARTMENT_ID NUMBER(4)
);

-- 제약조건 생성
--EMPLOYEE_ID
ALTER TABLE JOB_HISTORY
ADD ( CONSTRAINT JHIST03_EMP_FK FOREIGN KEY(EMPLOYEE_ID)
                 REFERENCES EMPLOYEES(EMPLOYEE_ID)
     , CONSTRAINT JHIST03_EMPLOYEE_NN CHECK("EMPLOYEE_ID" IS NOT NULL)
     , CONSTRAINT JHIST03_EMP_ID_ST_DATE_PK PRIMARY KEY(EMPLOYEE_ID));

--START_DATE
ALTER TABLE JOB_HISTORY
ADD ( CONSTRAINT JHIST03_EMP_ID_ST_DATE_PK PRIMARY KEY(START_DATE);
     , CONSTRAINT JHIST03_START_DATE_NN CHECK("START_DATE" IS NOT NULL)
     , CONSTRAINT JHIST03_DATE_INTERVAL CHECK(end_date > start_date));

--END_DATE
ALTER TABLE JOB_HISTORY
ADD ( CONSTRAINT JHIST03_END_DATE_NN CHECK("END_DATE" IS NOT NULL)
     , CONSTRAINT JHIST03_DATE_INTERVAL CHECK(end_date > start_date));
     
--JOB_ID
ALTER TABLE JOB_HISTORY
ADD ( CONSTRAINT JHIST03_JOB_NN CHECK("JOB_ID" IS NOT NULL)
     , CONSTRAINT JHIST03_JOB_FK FOREIGN KEY(JOB_ID)
                  REFERENCES JOBS(JOB_ID));

--DEPARTMENT_ID 
ALTER TABLE JOB_HISTORY
ADD ( CONSTRAINT JHIST03_DEPT_FK FOREIGN KEY(DEPARTMENT_ID)
                 REFERENCES DEPARTMENTS(DEPARTMENT_ID));

-----------------------------------------------------------------
--테이블명_컬럼명_제약타입
--EM2_컬럼_제약타입

--맨 마지막

SELECT *
FROM JOB_HISTORY;

	6. JOB_HISTORY 테이블
	컬럼명          널          데이터타입       제약이름                  KEY        컬럼이름            체크 조건
	EMPLOYEE_ID   NOT NULL   NUMBER(6)      JHIST_EMP_FK                    R          EMPLOYEE_ID      
	EMPLOYEE_ID   NOT NULL   NUMBER(6)      JHIST_EMPLOYEE_NN               C         EMPLOYEE_ID      "EMPLOYEE_ID" IS NOT NULL
	EMPLOYEE_ID   NOT NULL   NUMBER(6)      JHIST_EMP_ID_ST_DATE_PK         P         EMPLOYEE_ID       
	START_DATE    NOT NULL   DATE            JHIST_EMP_ID_ST_DATE_PK        P         START_DATE       
	START_DATE    NOT NULL   DATE            JHIST_START_DATE_NN            C         START_DATE         "START_DATE" IS NOT NULL
	START_DATE    NOT NULL   DATE            JHIST_DATE_INTERVAL            C         START_DATE        end_date > start_date
	END_DATE      NOT NULL   DATE            JHIST_END_DATE_NN              C          END_DATE         "END_DATE" IS NOT NULL
	END_DATE      NOT NULL   DATE            JHIST_DATE_INTERVAL            C          END_DATE          end_date > start_date
	JOB_ID        NOT NULL   VARCHAR2(10)   JHIST_JOB_NN                    C          JOB_ID             "JOB_ID" IS NOT NULL
	JOB_ID        NOT NULL   VARCHAR2(10)   JHIST_JOB_FK                    R           JOB_ID             
	DEPARTMENT_ID            NUMBER(4)      JHIST_DEPT_FK                   R          DEPARTMENT_ID       
    
--JOBS랑 REGIONS 먼저 생성.
--중복 제약조건있으면 제외하고 먼저 넣음!
--NOT NULL은 테이블 생성시 먼저 넣고.. 나머지는 나중에 넣어도 ㅇㅋㅇㅋ

-- 합친본,,,
/*
CREATE TABLE JOB_HISTORY03
( EMPLOYEE_ID   NUMBER(6)       CONSTRAINT JHIST03_EMPLOYEE_NN NOT NULL
, START_DATE    DATE            CONSTRAINT JHIST03_START_DATE_NN NOT NULL
, END_DATE      DATE            CONSTRAINT JHIST03_END_DATE_NN NOT NULL
, JOB_ID        VARCHAR2(10)    CONSTRAINT JHIST03_JOB_NN NOT NULL;
, DEPARTMENT_ID NUMBER(4)
, CONSTRAINT JHIST03_EMP_FK FOREIGN KEY(EMPLOYEE_ID)
             REFERENCES EMPLOYEES(EMPLOYEE_ID) 
, CONSTRAINT JHIST03_EMP_ID_ST_DATE_PK PRIMARY KEY(EMPLOYEE_ID, START_DATE)

, CONSTRAINT JHIST03_DATE_INTERVAL CHECK(end_date > start_date)

, CONSTRAINT JHIST03_JOB_FK FOREIGN KEY(JOB_ID)
             REFERENCES JOBS03(JOB_ID)
, CONSTRAINT JHIST03_DEPT_FK FOREIGN KEY(DEPARTMENT_ID)
             REFERENCES DEPARTMENTS03(DEPARTMENT_ID));
*/
----------------------------------------------------------------------

-- 7번째(제일 마지막) 생성 JOB_HISTORY03
CREATE TABLE JOB_HISTORY03
( EMPLOYEE_ID   NUMBER(6)       CONSTRAINT JHIST03_EMPLOYEE_NN NOT NULL
, START_DATE    DATE            CONSTRAINT JHIST03_START_DATE_NN NOT NULL
, END_DATE      DATE            CONSTRAINT JHIST03_END_DATE_NN NOT NULL
, JOB_ID        VARCHAR2(10)    CONSTRAINT JHIST03_JOB_NN NOT NULL;
, DEPARTMENT_ID NUMBER(4)
, CONSTRAINT JHIST03_EMP_ID_ST_DATE_PK PRIMARY KEY(EMPLOYEE_ID, START_DATE)
, CONSTRAINT JHIST03_DATE_INTERVAL CHECK(end_date > start_date)
, CONSTRAINT JHIST03_EMP_FK FOREIGN KEY(EMPLOYEE_ID)
             REFERENCES EMPLOYEES(EMPLOYEE_ID)
, CONSTRAINT JHIST03_JOB_FK FOREIGN KEY(JOB_ID)
             REFERENCES JOBS03(JOB_ID)
, CONSTRAINT JHIST03_DEPT_FK FOREIGN KEY(DEPARTMENT_ID)
             REFERENCES DEPARTMENTS03(DEPARTMENT_ID)
);


-- F.K 따로 정리
/*
ALTER TABLE JOB_HISTORY
ADD (CONSTRAINT JHIST03_EMP_FK FOREIGN KEY(EMPLOYEE_ID)
                REFERENCES EMPLOYEES(EMPLOYEE_ID)
    , CONSTRAINT JHIST03_JOB_FK FOREIGN KEY(JOB_ID)
                REFERENCES JOBS03(JOB_ID)
    , CONSTRAINT JHIST03_DEPT_FK FOREIGN KEY(DEPARTMENT_ID)
                REFERENCES DEPARTMENTS03(DEPARTMENT_ID));           
*/             
             
             
/*
--NOT NULL절 ADD로?
ALTER TABLE JOB_HISTORY
ADD ( CONSTRAINT JHIST03_EMPLOYEE_NN CHECK("EMPLOYEE_ID" IS NOT NULL)
    , CONSTRAINT JHIST03_START_DATE_NN CHECK("START_DATE" IS NOT NULL)
    , CONSTRAINT JHIST03_END_DATE_NN CHECK("END_DATE" IS NOT NULL)
    , CONSTRAINT JHIST03_JOB_NN CHECK("JOB_ID" IS NOT NULL));
*/


-- 3. 각 테이블별로 INSERT 구문 작성
-- 구문 작성 예제
/*
SELECT *
FROM JOB_HISTORY;

SELECT TO_DATE(START_DATE, 'YY-MM-DD')
FROM JOB_HISTORY;

INSERT INTO JOB_HISTORY VALUES
(1, '홈런볼', 20, TO_DATE('2001-11-01 09:00:10', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO TBL_INSA (NUM, NAME, SSN, IBSADATE, CITY, TEL, BUSEO, JIKWI, BASICPAY, SUDANG)
VALUES (1001, '홍길동', '771212-1022432', '1998-10-11', '서울', '011-2356-4528', '기획부', '부장', 2610000, 200000

INSERT INTO EMP VALUES
(7369,'SMITH','CLERK',7902,to_date('17-12-1980','dd-mm-yyyy'),800,NULL,20);

SELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD')   -- 2021-09-02
     , TO_CHAR(SYSDATE, 'YYYY')         -- 2021
     , TO_CHAR(SYSDATE, 'YEAR')         -- TWENTY TWENTY-ONE
     -- 뒤 두글자만 반환은..없는듯,,,?
     -- 날짜 입력 형식은....? TO_DATE? 그냥 ''?
*/

SELECT *
FROM JOB_HISTORY;

ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

TO_DATE('2006-07-24', 'YYYY-MM-DD')

INSERT INTO JOB_HISTORY VALUES (NUMBER, DATE, DATE, STRING, NUMBER);
-------------------------------------------------------------------------------
/*
INSERT INTO JOB_HISTORY VALUES (102, '01/01/13', '06/07/24', 'IT PROG', 60);
INSERT INTO JOB_HISTORY VALUES (101, '97/09/21', '01/10/27', 'AC ACCOUNT', 110);
INSERT INTO JOB_HISTORY VALUES (101, '01/10/28', '05/03/15', 'AC MGR', 110);
INSERT INTO JOB_HISTORY VALUES (201, '04/02/17', '07/12/19', 'MK REP', 20);
INSERT INTO JOB_HISTORY VALUES (114, '06/03/24', '07/12/31', 'ST CLERK', 50);
INSERT INTO JOB_HISTORY VALUES (122, '07/01/01', '07/12/31', 'ST CLERK', 50);
INSERT INTO JOB_HISTORY VALUES (200, '95/09/17', '01/06/17', 'AD ASST', 90);
INSERT INTO JOB_HISTORY VALUES (176, '06/03/24', '06/12/31', 'SA REP', 80);
INSERT INTO JOB_HISTORY VALUES (176, '07/01/01', '07/12/31', 'SA MAN', 80);
INSERT INTO JOB_HISTORY VALUES (200, '02/07/01', '06/12/31', 'AC ACCOUNT', 90);
*/
--칼럼명...생략가능?

SELECT *
FROM JOB_HISTORY;

(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID)
INSERT INTO JOB_HISTORY VALUES (NUMBER, DATE, DATE, VARCHAR2, NUMBER);
--*
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (102, TO_DATE('2001-01-13', 'YYYY-MM-DD'), TO_DATE('2006-07-24', 'YYYY-MM-DD'), 'IT PROG', 60);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (101, TO_DATE('1997-09-21', 'YYYY-MM-DD'), TO_DATE('2001-10-27', 'YYYY-MM-DD'), 'AC ACCOUNT', 110);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (101, TO_DATE('2001-10-28', 'YYYY-MM-DD'), TO_DATE('2005-03-15', 'YYYY-MM-DD'), 'AC MGR', 110);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (201, TO_DATE('2004-02-17', 'YYYY-MM-DD'), TO_DATE('2007-12-19', 'YYYY-MM-DD'), 'MK REP', 20);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (114, TO_DATE('2006-03-24', 'YYYY-MM-DD'), TO_DATE('2007-12-31', 'YYYY-MM-DD'), 'ST CLERK', 50);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (122, TO_DATE('2007-01-01', 'YYYY-MM-DD'), TO_DATE('2007-12-31', 'YYYY-MM-DD'), 'ST CLERK', 50);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (200, TO_DATE('1995-09-17', 'YYYY-MM-DD'), TO_DATE('2001-06-17', 'YYYY-MM-DD'), 'AD ASST', 90);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (176, TO_DATE('2006-03-24', 'YYYY-MM-DD'), TO_DATE('2006-12-31', 'YYYY-MM-DD'), 'SA REP', 80);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (176, TO_DATE('2007-01-01', 'YYYY-MM-DD'), TO_DATE('2007-12-31', 'YYYY-MM-DD'), 'SA MAN', 80);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (200, TO_DATE('2002-07-01', 'YYYY-MM-DD'), TO_DATE('2006-12-31', 'YYYY-MM-DD'), 'AC ACCOUNT', 90);



-- 최종본

-- 7번째(제일 마지막) 생성 JOB_HISTORY03
-- 테이블 생성구문
CREATE TABLE JOB_HISTORY03
( EMPLOYEE_ID   NUMBER(6)       CONSTRAINT JHIST03_EMPLOYEE_NN NOT NULL
, START_DATE    DATE            CONSTRAINT JHIST03_START_DATE_NN NOT NULL
, END_DATE      DATE            CONSTRAINT JHIST03_END_DATE_NN NOT NULL
, JOB_ID        VARCHAR2(10)    CONSTRAINT JHIST03_JOB_NN NOT NULL;
, DEPARTMENT_ID NUMBER(4)
, CONSTRAINT JHIST03_EMP_ID_ST_DATE_PK PRIMARY KEY(EMPLOYEE_ID, START_DATE)
, CONSTRAINT JHIST03_DATE_INTERVAL CHECK(end_date > start_date)
, CONSTRAINT JHIST03_EMP_FK FOREIGN KEY(EMPLOYEE_ID)
             REFERENCES EMPLOYEES(EMPLOYEE_ID)
, CONSTRAINT JHIST03_JOB_FK FOREIGN KEY(JOB_ID)
             REFERENCES JOBS03(JOB_ID)
, CONSTRAINT JHIST03_DEPT_FK FOREIGN KEY(DEPARTMENT_ID)
             REFERENCES DEPARTMENTS03(DEPARTMENT_ID)
);

-- 데이터 총 10개
-- 데이터 입력(JOB_HISTORY03)
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (102, TO_DATE('2001-01-13', 'YYYY-MM-DD'), TO_DATE('2006-07-24', 'YYYY-MM-DD'), 'IT PROG', 60);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (101, TO_DATE('1997-09-21', 'YYYY-MM-DD'), TO_DATE('2001-10-27', 'YYYY-MM-DD'), 'AC ACCOUNT', 110);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (101, TO_DATE('2001-10-28', 'YYYY-MM-DD'), TO_DATE('2005-03-15', 'YYYY-MM-DD'), 'AC MGR', 110);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (201, TO_DATE('2004-02-17', 'YYYY-MM-DD'), TO_DATE('2007-12-19', 'YYYY-MM-DD'), 'MK REP', 20);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (114, TO_DATE('2006-03-24', 'YYYY-MM-DD'), TO_DATE('2007-12-31', 'YYYY-MM-DD'), 'ST CLERK', 50);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (122, TO_DATE('2007-01-01', 'YYYY-MM-DD'), TO_DATE('2007-12-31', 'YYYY-MM-DD'), 'ST CLERK', 50);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (200, TO_DATE('1995-09-17', 'YYYY-MM-DD'), TO_DATE('2001-06-17', 'YYYY-MM-DD'), 'AD ASST', 90);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (176, TO_DATE('2006-03-24', 'YYYY-MM-DD'), TO_DATE('2006-12-31', 'YYYY-MM-DD'), 'SA REP', 80);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (176, TO_DATE('2007-01-01', 'YYYY-MM-DD'), TO_DATE('2007-12-31', 'YYYY-MM-DD'), 'SA MAN', 80);
INSERT INTO JOB_HISTORY(EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) 
VALUES (200, TO_DATE('2002-07-01', 'YYYY-MM-DD'), TO_DATE('2006-12-31', 'YYYY-MM-DD'), 'AC ACCOUNT', 90);
--10
/*
SELECT *
FROM JOB_HISTORY;

INSERT INTO EMPLOYEES03(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER
        , HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES(100, 'Steven', 'King', 'SKING', '515.123.4567', TO_DATE('2003-06-17', 'YYYY-MM-DD')
     , 'AD_PRES', 24000, NULL, NULL, 90);
*/
     
--133~145 다영
INSERT INTO EMPLOYEES03(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER
        , HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES(133, 'Jason', 'Mallin', 'JMALLIN', '650.127.1934', TO_DATE('2004-06-14', 'YYYY-MM-DD')
     , 'ST_CLERK', 3300, NULL, 122, 50);
INSERT INTO EMPLOYEES03(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER
        , HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES(134, 'Michael', 'Rogers', 'MROGERS', '650.127.1834', TO_DATE('2006-08-26', 'YYYY-MM-DD')
     , 'ST_CLERK', 2900, NULL, 122, 50);   
INSERT INTO EMPLOYEES03(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER
        , HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES(135, 'Ki', 'Gee', 'KGEE', '650.127.1734', TO_DATE('2007-12-12', 'YYYY-MM-DD')
     , 'ST_CLERK', 2400, NULL, 122, 50);
INSERT INTO EMPLOYEES03(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER
        , HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES(136, 'Hazel', 'Philtanker', 'HPHILTAN', '650.127.1634', TO_DATE('2008-02-06', 'YYYY-MM-DD')
     , 'ST_CLERK', 2200, NULL, 122, 50);
INSERT INTO EMPLOYEES03(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER
        , HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES(137, 'Renske', 'Ladwig', 'RLADWIG', '650.121.1234', TO_DATE('2003-07-14', 'YYYY-MM-DD')
     , 'ST_CLERK', 3600, NULL, 123, 50);
INSERT INTO EMPLOYEES03(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER
        , HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES(138, 'Stephen', 'Stiles', 'SSTILES', '650.121.2034', TO_DATE('2005-10-26', 'YYYY-MM-DD')
     , 'ST_CLERK', 3200, NULL, 123, 50);
INSERT INTO EMPLOYEES03(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER
        , HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES(139, 'John', 'Seo', 'JSEO', '650.121.2019', TO_DATE('2006-02-12', 'YYYY-MM-DD')
     , 'ST_CLERK', 2700, NULL, 123, 50);     
INSERT INTO EMPLOYEES03(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER
        , HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES(140, 'Joshua', 'Patel', 'JPATEL', '650.121.1834', TO_DATE('2006-04-06', 'YYYY-MM-DD')
     , 'ST_CLERK', 2500, NULL, 123, 50);         
INSERT INTO EMPLOYEES03(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER
        , HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES(141, 'Trenna', 'Rajs', 'TRAJS', '650.121.8009', TO_DATE('2003-10-17', 'YYYY-MM-DD')
     , 'ST_CLERK', 3500, NULL, 124, 50);        
INSERT INTO EMPLOYEES03(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER
        , HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES(142, 'Curtis', 'Davies', 'CDAVIES', '650.121.2994', TO_DATE('2005-01-29', 'YYYY-MM-DD')
     , 'ST_CLERK', 3100, NULL, 124, 50);  
INSERT INTO EMPLOYEES03(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER
        , HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES(143, 'Randall', 'Matos', 'RMATOS', '650.121.2874', TO_DATE('2006-03-15', 'YYYY-MM-DD')
     , 'ST_CLERK', 2600, NULL, 124, 50); 
INSERT INTO EMPLOYEES03(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER
        , HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES(144, 'Peter', 'Vargas', 'PVARGAS', '650.121.2004', TO_DATE('2006-07-09', 'YYYY-MM-DD')
     , 'ST_CLERK', 2500, NULL, 124, 50); 
INSERT INTO EMPLOYEES03(EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER
        , HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID)
VALUES(145, 'John', 'Russell', 'JRUSSEL', '011.44.1344.429268', TO_DATE('2004-10-01', 'YYYY-MM-DD')
     , 'SA_MAN', 14000, 0.4, 100, 80); 
     
     
-- 테이블 추가하고 해당 테이블 데이터 집어넣고.. 반복하기!
-- EMPLOYEE 테이블 및 데이터 집어넣고나서 제약조건 추가하기!
     
     